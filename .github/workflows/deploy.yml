name: Run Workflow to Deploy Code

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment (dev, qa, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install yq (to read YAML files)
      - name: Install yq
        run: |
          sudo apt-get update
          sudo snap install yq --classic  # Install yq via snap (v4.x compatible)

      # Step 3: Load environment configuration based on the input environment
      - name: Load environment configuration
        id: load_config
        run: |
          # Use the environment input to directly load the correct config file
          CONFIG_FILE="env/${{ github.event.inputs.environment }}.yml"

          # Check if the selected environment file exists
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Configuration file $CONFIG_FILE does not exist!"
            exit 1
          fi

          # Print the environment and DB details
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "DB Host: $(yq e '.db.host' $CONFIG_FILE)"
          echo "DB Port: $(yq e '.db.port' $CONFIG_FILE)"
          echo "DB Username: $(yq e '.db.username' $CONFIG_FILE)"
          echo "DB Password: $(yq e '.db.password' $CONFIG_FILE)"
          echo "DB Name: $(yq e '.db.database' $CONFIG_FILE)"
          
      # Step 3: Get token   
      - name: Execute cURL and store response
        id: curl-request
        run: |
          RESPONSE=$(curl --silent --location 'https://idcs-0e5fe3169e6e4b34849c6792b3305cbe.identity.oraclecloud.com:443/oauth2/v1/token' \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --header 'Accept-Charset: UTF-8' \
          --header 'Authorization: Basic NWJkMDI2MGI1OWY3NDY3NTliOTY2MWE0OWVmOWQyNjk6YmJjOTM1NDEtMDk5ZS00ZDM0LWI3ODktMzIyMjc3ZDU1NzAy' \
          --data-urlencode 'grant_type=client_credentials' \
          --data-urlencode 'scope=https://5CAACEBF832541A1921FAD29536E3F84.integration.us-ashburn-1.ocp.oraclecloud.com:443urn:opc:resource:consumer::all')

          # Extract the access_token from the JSON response using jq
          ACCESS_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')
          
          # Output the access_token to be used in subsequent steps
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_ENV
          echo "::set-output name=access_token::$ACCESS_TOKEN"

      - name: Execute API request using access_token
        run: |
          # Use the extracted access_token to make the second API call
          RESPONSE=$(curl --silent --location 'https://design.integration.us-ashburn-1.ocp.oraclecloud.com/ic/api/integration/v1/integrations?integrationInstance=oicpaasdev-idvavkgtnntf-ia' \
          --header "Authorization: Bearer ${{ env.access_token }}")

          # Output the response
          echo "API Response: $RESPONSE"

